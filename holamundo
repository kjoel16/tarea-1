public class AuthService : IAuthService
{
    private readonly HttpClient _httpClient = new HttpClient();

    public async Task<string> GetAccessTokenAsync()
    {
        var config = ConnectionConfig.GetJwtConsumir(); // Lee desde ConnectionData.json

        var request = new HttpRequestMessage(HttpMethod.Post, config.host);
        request.Content = new FormUrlEncodedContent(new Dictionary<string, string>
        {
            { "grant_type", config.grant_type },
            { "client_id", config.client_id },
            { "client_secret", config.client_secret },
            { "scope", config.scope }
        });

        var response = await _httpClient.SendAsync(request);
        response.EnsureSuccessStatusCode();

        var json = await response.Content.ReadAsStringAsync();
        var tokenResponse = JsonSerializer.Deserialize<TokenResponse>(json);

        return tokenResponse.access_token;
    }

    private class TokenResponse
    {
        public string access_token { get; set; }
        public string token_type { get; set; }
        public int expires_in { get; set; }
        public string scope { get; set; }
    }
}
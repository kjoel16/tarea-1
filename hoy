**free
ctl-opt dftactgrp(*no) actgrp(*new) option(*srcstmt:*nodebugio);

dcl-f DINO workstn usropn;

// Variables de pantalla
dcl-s TITULO   char(40);
dcl-s MSG      char(60);
dcl-s L1-L10   char(60) dim(10) inz(*all' ');
dcl-s PUNTAJE  char(20);
dcl-s AYUDA    char(40);

// Constantes
dcl-c WIDTH     60;
dcl-c GROUNDROW 10;
dcl-c DINO_COL   3;

// Estado del juego
dcl-s dinoRow   int(10) inz(GROUNDROW);
dcl-s velY      int(10) inz(0);
dcl-s jumping   ind     inz(*off);
dcl-s jumpPower int(10) inz(3);
dcl-s gravity   int(10) inz(-1);

dcl-s maxObs    int(10) inz(5);
dcl-ds Obs dim(5) qualified;
   x      int(10);
   alive  ind;
end-ds;

dcl-s tick       int(10) inz(0);
dcl-s spawnTick  int(10) inz(0);
dcl-s spawnEvery int(10) inz(3);
dcl-s score      int(10) inz(0);
dcl-s gameOver   ind     inz(*off);

// === Helpers ===
dcl-proc ClearWorld;
   for i int(10)=1 to 10;
      L1(i)=*all' ';
   endfor;
end-proc;

dcl-proc PutChar;
   dcl-pi *n row int(10) col int(10) ch char(1); end-pi;
   if row between 1 and 10 and col between 1 and WIDTH;
      %subst(L1(row):col:1)=ch;
   endif;
end-proc;

dcl-proc DrawGround;
   for c int(10)=1 to WIDTH;
      PutChar(GROUNDROW:c:'_');
   endfor;
end-proc;

dcl-proc DrawDino;
   PutChar(dinoRow:DINO_COL:'D');
end-proc;

dcl-proc DrawObstacles;
   for i int(10)=1 to maxObs;
      if Obs(i).alive and Obs(i).x>=1 and Obs(i).x<=WIDTH;
         PutChar(GROUNDROW:Obs(i).x:'|');
      endif;
   endfor;
end-proc;

dcl-proc MoveObstacles;
   for i int(10)=1 to maxObs;
      if Obs(i).alive;
         Obs(i).x-=1;
         if Obs(i).x<1;
            Obs(i).alive=*off;
            score+=1;
         endif;
      endif;
   endfor;
end-proc;

dcl-proc SpawnObstacle;
   for i int(10)=1 to maxObs;
      if not Obs(i).alive;
         Obs(i).alive=*on;
         Obs(i).x=WIDTH;
         leave;
      endif;
   endfor;
end-proc;

dcl-proc CheckCollision;
   for i int(10)=1 to maxObs;
      if Obs(i).alive and Obs(i).x=DINO_COL and dinoRow=GROUNDROW;
         gameOver=*on;
      endif;
   endfor;
end-proc;

dcl-proc Physics;
   if jumping;
      dinoRow-=1;
      velY-=1;
      if velY<=0; jumping=*off; endif;
   else;
      if dinoRow<GROUNDROW;
         dinoRow -= gravity;
         if dinoRow>GROUNDROW; dinoRow=GROUNDROW; endif;
      endif;
   endif;
end-proc;

dcl-proc DrawUI;
   TITULO='RPG DINO  F1=Salto  F3=Salir';
   PUNTAJE='Puntos: '+%char(score);
   AYUDA='Usa CL con OVRDSPF WAITRCD(1).';
end-proc;

// === Programa principal ===
open DINO;

dow not gameOver;
   tick+=1; spawnTick+=1;

   Physics();
   MoveObstacles();
   if spawnTick>=spawnEvery;
      SpawnObstacle(); spawnTick=0;
   endif;

   ClearWorld();
   DrawGround(); DrawObstacles(); DrawDino(); DrawUI();

   if gameOver;
      MSG='¡Colisión! F3 para salir.';
   else;
      MSG='F1 salta, F3 sale.';
   endif;

   exfmt SCR;

   if *in03=*on; leave; endif;
   if *in01=*on and not gameOver;
      if dinoRow=GROUNDROW;
         jumping=*on; velY=jumpPower;
      endif;
   endif;

   if not gameOver;
      CheckCollision();
   endif;
enddo;

*inlr=*on;
return;